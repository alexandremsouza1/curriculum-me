{"version":3,"sources":["components/LoadingSpinner/index.js","pages/NewResume.jsx","elements/Document.jsx","App.js","serviceWorker.js","index.js"],"names":["LoadingSpinner","React","createElement","className","styles","StyleSheet","create","page","with","flexDirection","fontSize","fontFamily","backgroundColor","color","padding","margin","lineHeight","sectionTitle","marginTop","textTransform","borderBottomWidth","borderBottomColor","marginBottom","title","sectionContent","job","alignItems","width","jobCompany","jobSectionContent","header","justifyContent","content","flex","name","textAlign","flexGrow","marginLeft","contactdetails","contactItem","icon","height","marginRight","logo","initials","skillsContainer","skillsTitle","fontWeight","skillsList","flexWrap","skillItem","contactInfo","addSpacesToName","trim","toUpperCase","split","join","sectionRenderers","Work Experience","section","View","jobs","map","jobIndex","key","Text","style","company","role","period","description","Skills","list","skill","index","sortedSections","concat","order","sort","a","b","ResumePage","Page","size","Image","src","renderFunction","renderSection","MyDocument","Fragment","Font","register","window","location","href","family","App","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","pdfLoaded","_inherits","_createClass","value","_this2","MyDocMobile","Document","isBrowser","PDFViewer","onRender","setState","isMobile","class","PDFDownloadLink","document","fileName","_ref","blob","url","loading","error","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf753b4e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nexport default function LoadingSpinner() {\n  return (\n    <div className=\"spinner-overlay\">\n      <div className=\"spinner\"></div>\n    </div>\n  );\n}","import { Page, StyleSheet, Text, View, Image } from \"@react-pdf/renderer\";\nimport React from \"react\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    with: 100,\n    flexDirection: \"column\",\n    fontSize: 10,\n    fontFamily: \"Lato\",\n    backgroundColor: \"#FFFFFF\",\n    color: \"#023642\",\n    padding: 50,\n    margin: 10,\n    lineHeight: 1.5,\n  },\n  sectionTitle: {\n    marginTop: 20,\n    color: \"#305fec\",\n    fontFamily: \"SourceSansPro-Bold\",\n    textTransform: \"uppercase\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#000\",\n    marginBottom: 1,\n  },\n  title: {\n    fontFamily: \"SourceSansPro-Bold\",\n  },\n  sectionContent: {\n    color: \"#023642\",\n  },\n  job: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 100,\n  },\n  jobCompany: {\n    fontFamily: \"SourceSansPro-Bold\",\n  },\n  jobSectionContent: {\n    color: \"#023642\",\n    marginBottom: 5,\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexDirection: \"column\",\n    flex: 1,\n  },\n  name: {\n    fontSize: 18,\n    textAlign: \"left\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    color: \"#305fec\",\n    lineHeight: 0,\n    flexGrow: 1,\n    marginLeft: 10,\n  },\n  contactdetails: {\n    flexDirection: \"column\",\n    textAlign: \"left\",\n  },\n  contactItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  icon: {\n    width: 8,\n    height: 8,\n    marginRight: 2,\n  },\n  logo: {\n    width: 50,\n    height: 50,\n    backgroundColor: \"blue\",\n    fontFamily: \"SourceSansPro-Bold\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n  },\n  initials: {\n    color: \"white\",\n    fontSize: 20,\n  },\n  skillsContainer: {\n    marginTop: 10,\n  },\n  skillsTitle: {\n    fontSize: 12,\n    fontWeight: \"bold\",\n    marginBottom: 5,\n  },\n  skillsList: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  skillItem: {\n    fontSize: 10,\n  },\n});\n\nconst contactInfo = {\n  firstName: \"Alexandre\",\n  lastName: \"Magno\",\n  email: \"alexandremagnodev0@gmail.com\",\n  phone: \"(37)9 9949-2674\",\n  location: \"Minas Gerais, Brazil\",\n};\n\nconst sections = [\n  {\n    order: 1,\n    name: \"Professional Summary\",\n    content: `Full-stack developer with a emphasis on backend development. \n        Proven ability to design, develop, and deploy robust web applications. \n        Seeking a challenging role to leverage my skills in Golang, PHP (Laravel and other),NodeJS and contribute to innovative projects.`,\n  },\n  {\n    order: 2,\n    name: \"Personal Information\",\n    content: `Date of Birth: 04/04/90\n        LinkedIn: https://www.linkedin.com/in/alexandre-m-souza/`,\n  },\n  {\n    order: 3,\n    name: \"Work Experience\",\n    jobs: [\n      {\n        company: \"LETS Delivery\",\n        period: \"Feb 2025 - Present, São Paulo, Brazil · Remote\",\n        role: \"Full Stack Engineer\",\n        description: `- Responsible for maintaining and developing projects related to the integration hub.\n        - Developed APIs using Node.js and implemented serverless functions with AWS Lambda.\n        - Integrated merchants with multiple marketplaces and logistics partners into a unified system.\n        - Followed best development practices, writing clean and efficient code.\n        - Implemented unit tests with Jest to ensure code quality and reliability.`,\n      },\n      {\n        company: \"Plastika Produtos Digitais\",\n        period:\n          \"Oct 2024 - Feb 2025, Curitiba, Paraná, Brazil · Remote\",\n        role: \"Full-Stack Web-Developer\",\n        description: `- Responsible for maintaining the Aston project, a fintech focused on providing digital financial solutions.\n                - Developed a feature that enables fiduciary agents and banking correspondents to sell financial products directly through the platform.\n                - Worked on development, testing, and optimization with a focus on stability and performance.\n                - Ensured scalability, multi-provider support, performance, and availability.\n                - Utilized Laravel Nova for building and managing the platform's administrative interface.`,\n      },\n      {\n        company: \"Mobiup Beyond Digital\",\n        period: \"May 2022 - Jul 2024, Sao Paulo\",\n        role: \"Full-Stack Web-Developer\",\n        description: `- Worked in the support and projects team, contributing to various e-commerce initiatives.\n                - Participated in a project for a platform offering exclusive benefits and loyalty points for purchases.\n                - Developed solutions for a ticketing system, integrating various services and APIs.\n                - Actively contributed to Coca-Cola’s e-commerce platform, focused on the company’s products.\n                - Took part in a large-scale project involving the migration of a legacy system to a microservices architecture, covering both backend and application migration.\n                - Implemented performance, security, and scalability improvements during the migration process, using modern software development practices.\n                - Worked with WordPress, customizing themes and plugins to enhance functionality.\n                - Developed and maintained websites using WordPress Elementor, ensuring responsive and dynamic designs.\n                - Integrated third-party plugins and optimized WordPress-based platforms for performance and SEO.`,\n      },\n      {\n        company: \"Trackerup Tecnologia LTDA\",\n        period: \"Apr 2018 - May 2022, Sao Paulo\",\n        role: \"Software Developer\",\n        description: `- Worked on the maintenance of the TrackerUp application tracking project, which allows advanced coordination of external teams in a fast and streamlined way. Key functionalities include: real-time task management, route suggestions, history of traveled routes, intelligent reporting\n                 - Participated in the implementation of a large project for Whirlpool, managing tasks for employees responsible for maintaining white goods appliances.\n                 - Contributed to the implementation of a project for Sanofi, calculating customer routes based on a schedule of visits to optimize costs for the company`,\n      },\n      {\n        company: \"W.E Logus Informática LTDA\",\n        period: \"Dez 2016 - Nov 2017, Formiga\",\n        role: \"T.I Assistant\",\n        description: `- Initially worked in customer service and support before transitioning to the quality department.\n                 - Developed metrics to evaluate customer service performance and collected data to assess the acceptance of new features and the expected outcomes.\n                 - Tested features deployed to the Eficaz ERP CRM to identify any side effects or issues.\n                 - Responsible for database migration and ensuring data integrity during transitions.`,\n      },\n      {\n        company: \"SOL Logística e Locações LTDA ME\",\n        period: \"Apr 2016 - Aug 2016, Belo Horizonte\",\n        role: \"Administrative Assistant\",\n        description: `- Managed the issuance of tax documents related to cargo operations.\n                 - Controlled internal operations for the Vilma Flour project, overseeing inventory management for incoming and outgoing products in the warehouse.\n                 - Participated in the installation of the internal network and configuration of servers to support operational needs.`,\n      },\n    ],\n  },\n  {\n    order: 4,\n    name: \"Education\",\n    title: \"Pontifical Catholic University of Minas Gerais - PUC\",\n    content: \"Bachelor's Degree in Information Systems | 06/2011 - 06/2015\",\n  },\n  {\n    order: 5,\n    name: \"Skills\",\n    list: [\n      \"Vue\",\n      \"React\",\n      \"Laravel\",\n      \"React-Native\",\n      \"Expo\",\n      \"PHP\",\n      \"Go\",\n      \"NodeJS\",\n      \"Javascript\",\n      \"Typescript\",\n      \"Docker\",\n      \"Kubernetes\",\n    ],\n  },\n];\n\nconst geNameInitials = () => {\n  const result = [contactInfo.firstName, contactInfo.lastName];\n  const initials = result.map((name) => name[0].toUpperCase());\n  return initials.join(\"\");\n};\n\nfunction addSpacesToName(name) {\n  const characters = name.trim().toUpperCase().split(\"\");\n  return characters.join(\" \");\n}\n\nconst renderExperience = (section) => (\n  <View>\n    {section.jobs.map((job, jobIndex) => (\n      <View key={jobIndex}>\n        <Text style={styles.jobCompany}>\n          {\" \"}\n          • {job.company} | {job.role} | {job.period}\n        </Text>\n        <Text style={styles.jobSectionContent}>{job.description}</Text>\n      </View>\n    ))}\n  </View>\n);\n\nconst renderSkills = (section) => (\n  <View style={styles.skillsContainer}>\n    <Text style={styles.skillsList}>\n      {section.list.map((skill, index) => (\n        <Text key={index} style={styles.skillItem}>\n          {\" • \" + skill}\n        </Text>\n      ))}\n    </Text>\n  </View>\n);\n\nconst sectionRenderers = {\n  \"Work Experience\": renderExperience,\n  Skills: renderSkills,\n};\n\nconst renderSection = (section) => {\n  const renderFunction = sectionRenderers[section.name];\n  if (renderFunction) {\n    return renderFunction(section);\n  }\n  return <Text style={styles.sectionContent}>{section.content}</Text>;\n};\n\nconst sortedSections = [...sections].sort((a, b) => a.order - b.order);\n\nconst ResumePage = () => (\n  <Page size=\"A4\" style={styles.page}>\n    <View style={styles.header}>\n      <View style={styles.logo}>\n        <Text style={styles.initials}>{geNameInitials()}</Text>\n      </View>\n      <View style={styles.name}>\n        <Text>{addSpacesToName(contactInfo.firstName)}</Text>\n        <Text>{addSpacesToName(contactInfo.lastName)}</Text>\n      </View>\n      <View style={styles.contactdetails}>\n        <View style={styles.contactItem}>\n          <Image style={styles.icon} src=\"assets/icon-phone.png\" />\n          <Text>{contactInfo.phone}</Text>\n        </View>\n        <View style={styles.contactItem}>\n          <Image style={styles.icon} src=\"assets/icon-mail.png\" />\n          <Text>{contactInfo.email}</Text>\n        </View>\n        <View style={styles.contactItem}>\n          <Image style={styles.icon} src=\"assets/icon-location-pin.png\" />\n          <Text>{contactInfo.location}</Text>\n        </View>\n      </View>\n    </View>\n    {sortedSections.map((section, index) => (\n      <View key={index} style={styles.section}>\n        <Text style={styles.sectionTitle}>{section.name}</Text>\n        {section.title && <Text style={styles.title}>{section.title}</Text>}\n        {renderSection(section)}\n      </View>\n    ))}\n  </Page>\n);\n\nexport default ResumePage;\n","import React from 'react';\n\nimport ResumePage from '../pages/NewResume';\n\n// Create Document Component\nexport const MyDocument = () => (\n  <>\n    <ResumePage />\n  </>\n);\n","import { Font, PDFViewer, Document, PDFDownloadLink  } from '@react-pdf/renderer';\nimport React, { Component  } from 'react';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { MyDocument } from './elements/Document';\nimport {isMobile, isBrowser} from 'react-device-detect';\nimport './App.css'\n\n// Register Fonts\n\n// Font.register('https://fonts.googleapis.com/css?family=Roboto', { family: 'Roboto' });\n// eslint-disable-next-line no-restricted-globals\nFont.register(`${window.location.href}assets/Lato-Regular.ttf`, { family: 'Lato' });\nFont.register(`${window.location.href}assets/Roboto-Regular.ttf`, { family: 'Roboto' });\nFont.register(`${window.location.href}assets/Roboto-Bold.ttf`, { family: 'Roboto-Bold' });\nFont.register(`${window.location.href}assets/SourceSansPro-Bold.ttf`, { family: 'SourceSansPro-Bold' });\nFont.register(`${window.location.href}assets/SourceSansPro-Regular.ttf`, { family: 'SourceSansPro' });\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { pdfLoaded: false };\n  }\n  render() {\n    const MyDocMobile = () => (\n      <Document>\n          <MyDocument />\n      </Document>\n    );\n    return (\n        <>\n          { isBrowser && (\n            <>\n             {this.state.pdfLoaded ? null : (\n                  <LoadingSpinner />\n              )}\n              <PDFViewer style={{ width: '100vw', height: '100vh' }}>\n                <Document onRender={() =>  this.setState({ pdfLoaded: true })}>\n                  <MyDocument />\n                </Document>\n              </PDFViewer>\n            </>\n          )}\n          {isMobile && (\n            <div class=\"center\">\n              <PDFDownloadLink document={<MyDocMobile />} fileName=\"curriculo_alexandre.pdf\">\n                  {({ blob, url, loading, error }) =>\n                    loading ? <LoadingSpinner /> : 'Download now!'\n                  }\n              </PDFDownloadLink>\n            </div>\n          )}\n        </>   \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}